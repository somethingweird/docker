<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title><%= title %></title>
        <link rel='stylesheet' href='/stylesheets/style.css' />
        <link rel="stylesheet" href="/javascripts/bootstrap/css/bootstrap.min.css">
        <link rel='stylesheet' href='/font/css/open-iconic-bootstrap.css' />
        <script src="/javascripts/jquery/jquery-3.2.1.min.js"></script>
    </head>
    <body>
        <% include header.ejs %>
        <div class="tab-content">
            <div class="tab-pane active" id="image" role="tabpanel">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col">
                            <table class="table table-hover" id="image_ls">
                                <thead><tr>
                                    <th>REPOSITORY</th>
                                    <th>TAG</th>
                                    <th>CREATED</th>
                                    <th>SIZE</th>
                                    <th></th>
                                </tr></thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-pane" id="run" role="tabpanel">
                <form>
                <div id="docker_run" class="container-fluid">
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <label for="image" class="col-1 col-form-label">Image:</label>
                        <div class="col-2 text-nowrap text-truncate">
                            <select class="form-control" id="run_image">
                                <option hidden>Select One</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <label for="network" class="col-1 col-form-label">Network:</label>
                        <div class="col-2 text-nowrap text-truncate"><select id="run_network" class="form-control"><option value="">Default</option></select></div>
                    </div>
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <label for="cpus" class="col-1 col-form-label">CPUS:</label>
                        <div class="col-2 text-nowrap text-truncate">
                            <select id="run_cpus" class="form-control">
                                <option hidden>Select One</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <div class="col-1 text-nowrap text-truncate"><input class="form-control" type="checkbox" id="rm"></div>
                        <label for="rm" class="col-3 form-check-label">Remove process when exited</label>
                    </div>
                    <div class="row">
                        <div class="col-1 text-nowrap text-truncate"><input class="form-control" type="checkbox" id="privileges"></div>
                        <label for="privileges" class="col-3 form-check-label">Give extended privileges to this container</label>
                    </div>
                    <div class="row">
                        <div class="col-1 text-nowrap text-truncate"><button id="execute_run" type="button" class="btn btn-primary">Run</button></div>
                    </div>
                </div>
                </form>
            </div>

            <div class="tab-pane" id="process" role="tabpanel">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col">
                            <table class="table table-hover" id="docker_ps">
                                <thead>
                                    <tr>
                                        <th>Command</th>
                                        <th>Running For</th>
                                        <th>Port</th>
                                        <th>Status</th>
                                        <th>Name</th>
                                        <th>Network</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-pane" id="volume" role="tabpanel">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col">
                            <table class="table table-hover" id="docker_volume">
                                <thead>
                                    <tr>
                                        <th>Driver</th>
                                        <th>Volume Name</th>
                                        <th>Scope</th>
                                        <th>Mount Point</th>
                                        <th>Label</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">&nbsp</div>
                <div class="row">
                    <div class="col"><button id="volume_pruneAll" type="button" class="btn btn-primary">Prune All</button></div>
                </div>
            </div>

            <div class="tab-pane" id="network" role="tabpanel">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col">
                            <table class="table table-hover" id="docker_network">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Driver</th>
                                        <th>Score</th>
                                        <th>Internal</th>
                                        <th>Label</th>
                                        <th>Create At</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% include footer.ejs %>
        <script>
            var imageTag = {};
            var networkTag = {};
            var cpus = 0;

            function docker_network(params) {
                $('#docker_network tbody').empty();
                networkTab = {};
                $.ajax({
                    url: '/docker/network/ls',
                    dataType: 'json',
                    cache: true,
                    async: params.async,
                    success: function (result) {
                        result.images.map(function (row) {
                            networkTab[row['ID']] = row['Name'];
                            $('#docker_network tbody').append('<tr data-id="'+row['ID']+'">'+
                                '<td>'+row['Name']+'</td>'+
                                '<td>'+row['Driver']+'</td>'+
                                '<td>'+row['Scope']+'</td>'+
                                '<td>'+row['Internal']+'</td>'+
                                '<td>'+row['Labels']+'</td>'+
                                '<td>'+row['CreatedAt']+'</td>'+
                            '</tr>');
                        });
                    }
                })
            }

            function docker_volume() {
                $('#docker_volume tbody').empty();
                $.ajax({
                    url: '/docker/volume/ls',
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        result.images.map(function (row) {
                            var icon = '<a href="#" class="volume_rm"><span class="oi oi-trash"></span></a>';
                            $('#docker_volume tbody').append('<tr>'+
                                '<td>'+row['Driver']+'</td>'+
                                '<td>'+row['Name']+'</td>'+
                                '<td>'+row['Scope']+'</td>'+
                                '<td>'+row['Mountpoint']+'</td>'+
                                '<td>'+row['Labels']+'</td>'+
                                '<td data-id="'+row['Name']+'">'+icon+'</td>'+
                            '</tr>')
                        });
                    }
                })
            }

            function docker_ps() {
                $('#docker_ps tbody').empty();
                $.ajax({
                    url: '/docker/ps/all',
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        result.images.map(function (row) {
                            var warning = '';
                            var icon = '<span class="oi oi-reload"></span> <span class="oi oi-media-play"></span> <span class="oi oi-media-stop"></span> <span class="oi oi-media-pause"></span> <span class="oi oi-trash"></span>';
                            var exit_regex = /^Exited \(\d+\)/;
                            var up_regex = /^Up /;
                            var pause_regex = /^Up\s.+\s\(Paused\)$/;
                            if (exit_regex.test(row['Status'])) {
                                warning = 'alert alert-danger';
                                icon = '<a href="#" class="process_reload"><span title="reload" class="oi oi-reload"></span></a> <a href="#" class="process_kill"><span title="remove" class="oi oi-trash"></span></a>';
                            };

                            if (up_regex.test(row['Status'])) {
                                if (pause_regex.test(row['Status'])) {
                                    warning = 'alert alert-warning';
                                    icon = '<a href="#" class="process_unpause"><span title="play" class="oi oi-media-play"></span></a> <span class="oi oi-x"></span>';
                                } else {
                                    warning = 'alert alert-success';
                                    icon = '<a href="#" class="process_reload"><span title="reload" class="oi oi-reload"></span></a> <a href="#" class="process_stop"><span title="stop" class="oi oi-media-stop"></span></a> <a href="#" class="process_pause"><span title="suspend" class="oi oi-media-pause"></span></a> <span class="oi oi-x"></span>';
                                }
                            };
                            $('#docker_ps tbody').append(
                                '<tr class="'+warning+'">'+
                                    '<td class="text-nowrap">'+row['Command']+'</td>'+
                                    '<td class="text-nowrap">'+row['RunningFor']+'</td>'+
                                    '<td>'+row['Ports']+'</td>'+
                                    '<td>'+row['Status']+'</td>'+
                                    '<td>'+row['Names']+'</td>'+
                                    '<td>'+row['Networks']+'</td>'+
                                    '<td class="text-nowrap" data-id="'+row['ID']+'">'+icon+'</td>'+
                                '</tr>'
                            );
                        });
                    }
                });
            };

            function docker_images() {
                $('#image_ls tbody').empty();
                $.ajax({
                    url: '/docker/images',
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        imageTab = {};
                        result.images.map(function (row) {
                            imageTab[row['ID']] = row['Repository']+':'+row['Tag'];
                            var icons =
                                '<span class="oi oi-cloud-download"></span> '+
                                '<a href="#" class="images_rmi"><span class="oi oi-trash"></span></a>';

                            $('#image_ls tbody').append('<tr>'+
                                '<td>'+row['Repository']+'</td>'+
                                '<td>'+row['Tag']+'</td>'+
                                '<td class="text-nowrap">'+row['CreatedAt']+'</td>'+
                                '<td>'+row['Size']+'</td>'+
                                '<td class="text-nowrap" data-id="'+row['ID']+'">'+icons+'</td>'
                                +'</tr>');
                        });
                    }
                });
            };

            function docker_run() {
                // run_image
                // Assume that we already got a list of images because that was run by default
                $('#run_image option').not(':first').remove();
                for (var k in imageTab) {
                    if (imageTab.hasOwnProperty(k)) {
                        $('#run_image').append($('<option>', {value: k, text: imageTab[k]}));
                    }
                };
                // list of network - no guarrentee - so it need to be checked if not run docker_network;
                if (typeof networkTab === 'undefined' || $.isEmptyObject(networkTab)) {
                        docker_network({async: false});
                };
                $('#run_network option').not(':first').remove();
                for (var k in networkTab) {
                    if (networkTab.hasOwnProperty(k)) {
                        $('#run_network').append($('<option>', {value: k, text: networkTab[k]}));
                    }
                };

                $('#run_cpus option').not(':first').remove();
                for (var i = 0; i < cpus; i++) {
                    var c = i + 1;
                    $('#run_cpus').append($('<option>', {value: c, text: c}));
                };

            };

            $('#tab_image').on('click', function () {docker_images()});
            $('#tab_ps').on('click', function () {docker_ps()});
            $('#tab_volume').on('click', function () {docker_volume()});
            $('#tab_network').on('click', function () {docker_network({async:true})});
            $('#tab_run').on('click', function () {docker_run()});
            $('#execute_run').on('click', function (e) {
                e.preventDefault();
                $.ajax({
                    url: '/docker/run/'+$('#run_image').val(),
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        console.log(result);
                        alert(result.message);
                    }
                })
            });

            $('#docker_ps').on('click', '.process_stop', function () {
                $.ajax({
                    url: '/docker/stop/'+$(this).parent().data('id'),
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        docker_ps();
                    }
                });
            });

            $('#docker_ps').on('click', '.process_pause', function () {
                $.ajax({
                    url: '/docker/pause/'+$(this).parent().data('id'),
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        docker_ps();
                    }
                });
            });

            $('#docker_ps').on('click', '.process_reload', function () {
                $.ajax({
                    url: '/docker/restart/'+$(this).parent().data('id'),
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        docker_ps();
                    }
                });
            });

            $('#docker_ps').on('click', '.process_kill', function () {
                $.ajax({
                    url: '/docker/rm/'+$(this).parent().data('id'),
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        if (result.success) {
                            // successful
                        }
                        docker_ps();
                    }
                });
            });

            $('#docker_ps').on('click', '.process_unpause', function () {
                $.ajax({
                    url: '/docker/unpause/'+$(this).parent().data('id'),
                    dataType: 'json',
                    cache: true,
                    success: function (result) {
                        docker_ps();
                    }
                });
            });

            $('#image_ls').on('click', '.images_rmi', function (e) {
                e.preventDefault();
                var validate = confirm ("Are you sure\nyou want to remove image?");
                if (validate) {
                    $.ajax({
                        url: '/docker/rmi/'+$(this).parent().data('id'),
                        dataType: 'json',
                        cache: true,
                        success: function (result) {
                            docker_images()
                        }
                    });
                };
            })
            $('#docker_volume').on('click', '.volume_rm', function () {
                var validate = confirm("Are you sure you want to remove\n\n"+$(this).parent().data('id')+"\n");
                if (validate) {
                    $.ajax({
                        url: '/docker/volume/rm/'+$(this).parent().data('id'),
                        dataType: 'json',
                        cache: true,
                        success: function (result) {
                            docker_volume();
                        }
                    });
                }
            });

            $('#volume_pruneAll').on('click', function(e) {
                e.preventDefault();
                var validate = confirm ("Are you sure\nyou want to prune all?");
                if (validate) {
                    $.ajax({
                        url: '/docker/volume/prune',
                        dataType: 'json',
                        cache: true,
                        success: function (result) {
                            docker_volume();
                        }
                    });
                }
            })
            $(function () {
                docker_images();
                $.ajax({
                    url: '/docker/system/cpus',
                    dataType: 'json',
                    cache: true,
                    success: function(result) {
                        cpus = result.cpus;
                    }
                })
            });
        </script>
        <script src="/javascripts/popper.js/dist/umd/popper.min.js"></script>
        <script src="/javascripts/bootstrap/js/bootstrap.min.js"></script>
    </body>
</html>
